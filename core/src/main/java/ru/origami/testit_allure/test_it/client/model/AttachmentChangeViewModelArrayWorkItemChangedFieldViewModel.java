/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.origami.testit_allure.test_it.client.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;

import java.util.*;


/**
 * AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel
 */
@JsonPropertyOrder({
  AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel.JSON_PROPERTY_OLD_VALUE,
  AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel.JSON_PROPERTY_NEW_VALUE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel {
  public static final String JSON_PROPERTY_OLD_VALUE = "oldValue";
  private JsonNullable<List<AttachmentChangeViewModel>> oldValue = JsonNullable.<List<AttachmentChangeViewModel>>undefined();

  public static final String JSON_PROPERTY_NEW_VALUE = "newValue";
  private JsonNullable<List<AttachmentChangeViewModel>> newValue = JsonNullable.<List<AttachmentChangeViewModel>>undefined();

  public AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel() { 
  }

  public AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel oldValue(List<AttachmentChangeViewModel> oldValue) {
    this.oldValue = JsonNullable.<List<AttachmentChangeViewModel>>of(oldValue);
    return this;
  }

  public AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel addOldValueItem(AttachmentChangeViewModel oldValueItem) {
    if (this.oldValue == null || !this.oldValue.isPresent()) {
      this.oldValue = JsonNullable.<List<AttachmentChangeViewModel>>of(new ArrayList<>());
    }
    try {
      this.oldValue.get().add(oldValueItem);
    } catch (NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get oldValue
   * @return oldValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AttachmentChangeViewModel> getOldValue() {
        return oldValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OLD_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentChangeViewModel>> getOldValue_JsonNullable() {
    return oldValue;
  }
  
  @JsonProperty(JSON_PROPERTY_OLD_VALUE)
  public void setOldValue_JsonNullable(JsonNullable<List<AttachmentChangeViewModel>> oldValue) {
    this.oldValue = oldValue;
  }

  public void setOldValue(List<AttachmentChangeViewModel> oldValue) {
    this.oldValue = JsonNullable.<List<AttachmentChangeViewModel>>of(oldValue);
  }


  public AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel newValue(List<AttachmentChangeViewModel> newValue) {
    this.newValue = JsonNullable.<List<AttachmentChangeViewModel>>of(newValue);
    return this;
  }

  public AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel addNewValueItem(AttachmentChangeViewModel newValueItem) {
    if (this.newValue == null || !this.newValue.isPresent()) {
      this.newValue = JsonNullable.<List<AttachmentChangeViewModel>>of(new ArrayList<>());
    }
    try {
      this.newValue.get().add(newValueItem);
    } catch (NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get newValue
   * @return newValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AttachmentChangeViewModel> getNewValue() {
        return newValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEW_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentChangeViewModel>> getNewValue_JsonNullable() {
    return newValue;
  }
  
  @JsonProperty(JSON_PROPERTY_NEW_VALUE)
  public void setNewValue_JsonNullable(JsonNullable<List<AttachmentChangeViewModel>> newValue) {
    this.newValue = newValue;
  }

  public void setNewValue(List<AttachmentChangeViewModel> newValue) {
    this.newValue = JsonNullable.<List<AttachmentChangeViewModel>>of(newValue);
  }


  /**
   * Return true if this AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel attachmentChangeViewModelArrayWorkItemChangedFieldViewModel = (AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel) o;
    return equalsNullable(this.oldValue, attachmentChangeViewModelArrayWorkItemChangedFieldViewModel.oldValue) &&
        equalsNullable(this.newValue, attachmentChangeViewModelArrayWorkItemChangedFieldViewModel.newValue);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(oldValue), hashCodeNullable(newValue));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachmentChangeViewModelArrayWorkItemChangedFieldViewModel {\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

